CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE OR REPLACE FUNCTION updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$ language 'plpgsql';

DROP TABLE IF EXISTS PERMISSIONS;
DROP TABLE IF EXISTS ROLES;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS USER_ROLES;
DROP TABLE IF EXISTS ROLES_PERMISSIONS;
DROP TABLE IF EXISTS CATEGORIES;
DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS PRODUCT_CATEGORIES;

DROP TRIGGER IF EXISTS permissions_updated_at_column ON PERMISSIONS;
DROP TRIGGER IF EXISTS roles_updated_at_column ON ROLES;
DROP TRIGGER IF EXISTS users_updated_at_column ON USERS;
DROP TRIGGER IF EXISTS user_roles_updated_at_column ON USER_ROLES;
DROP TRIGGER IF EXISTS roles_permissions_updated_at_column ON ROLES_PERMISSIONS;
DROP TRIGGER IF EXISTS categories_updated_at_column ON CATEGORIES;
DROP TRIGGER IF EXISTS products_updated_at_column ON PRODUCTS;
DROP TRIGGER IF EXISTS product_categories_updated_at_column ON PRODUCT_CATEGORIES;

CREATE TABLE IF NOT EXISTS PERMISSIONS(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT DEFAULT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    ALLOW_DELETED BOOLEAN NOT NULL DEFAULT FALSE,
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    CONSTRAINT permissions_id_unique UNIQUE (ID),
    CONSTRAINT permissions_name_unique UNIQUE (NAME)
);
CREATE TRIGGER permissions_updated_at_column
BEFORE UPDATE ON PERMISSIONS
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS ROLES(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT DEFAULT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    ALLOW_DELETED BOOLEAN NOT NULL DEFAULT FALSE,
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    CONSTRAINT roles_id_unique UNIQUE (ID),
    CONSTRAINT roles_name_unique UNIQUE (NAME)
);
CREATE TRIGGER roles_updated_at_column
BEFORE UPDATE ON ROLES
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS USERS(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    PHONE_NUMBER VARCHAR(255) DEFAULT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    VERIFY BOOLEAN DEFAULT FALSE,
    TOKEN VARCHAR(255) DEFAULT NULL,
    FIRST_NAME VARCHAR(255) NOT NULL,
    MIDDLE_NAME VARCHAR(255) DEFAULT NULL,
    LAST_NAME VARCHAR(255) DEFAULT NULL,
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    CONSTRAINT users_id_unique UNIQUE (ID),
    CONSTRAINT users_email_unique UNIQUE (EMAIL),
    CONSTRAINT users_username_unique UNIQUE (USERNAME),
    CONSTRAINT users_phone_number_unique UNIQUE (PHONE_NUMBER)
);
CREATE TRIGGER users_updated_at_column
BEFORE UPDATE ON USERS
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS USERS_ROLES(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    USER_ID UUID NOT NULL,
    ROLE_ID UUID NOT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID) ON DELETE CASCADE
);
CREATE TRIGGER users_roles_updated_at_column
BEFORE UPDATE ON USERS_ROLES
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS ROLES_PERMISSIONS(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    ROLE_ID UUID NOT NULL,
    PERMISSION_ID UUID NOT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID) ON DELETE CASCADE,
    FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS(ID) ON DELETE CASCADE
);
CREATE TRIGGER roles_permissions_updated_at_column
BEFORE UPDATE ON ROLES_PERMISSIONS
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS CATEGORIES(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT DEFAULT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL
);
CREATE TRIGGER categories_updated_at_column
BEFORE UPDATE ON CATEGORIES
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS PRODUCTS(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    PARENT_ID UUID DEFAULT NULL,
    USER_ID UUID NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    IMAGE_URL TEXT DEFAULT NULL,
    DESCRIPTION TEXT DEFAULT NULL,
    PRICE NUMERIC(10,2) NOT NULL DEFAULT 0,
    STOCK INTEGER NOT NULL DEFAULT 0,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    FOREIGN KEY (PARENT_ID) REFERENCES PRODUCTS(ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE
);
CREATE TRIGGER products_updated_at_column
BEFORE UPDATE ON PRODUCTS
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();

CREATE TABLE IF NOT EXISTS PRODUCTS_CATEGORIES(
    ID UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    PRODUCT_ID UUID NOT NULL,
    CATEGORY_ID UUID NOT NULL,
    ACTIVE VARCHAR(255) DEFAULT 'INACTIVE',
    VERSION BIGINT NOT NULL DEFAULT 0,
    CREATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    UPDATED_BY VARCHAR NOT NULL DEFAULT 'SYSDBA',
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    DELETED_BY VARCHAR DEFAULT NULL,
    DELETED_AT TIMESTAMP WITH TIME ZONE DEFAULT NULL,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID) ON DELETE CASCADE,
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID) ON DELETE CASCADE
);
CREATE TRIGGER products_categories_updated_at_column
BEFORE UPDATE ON PRODUCTS_CATEGORIES
FOR EACH ROW EXECUTE PROCEDURE updated_at_column();
